{"version":3,"sources":["QuizData.js","Quiz.js","index.js"],"names":["QuizData","id","question","options","answer","Quiz","props","loadQuiz","currentIndex","state","setState","nextQuestionHandler","userAnswer","score","checkAnswer","disabled","finishHandler","length","quizEnd","this","prevProps","prevState","map","item","index","className","option","onClick","Component","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"gMAAaA,EAAW,CACpB,CACIC,GAAI,EACJC,SAAS,kCACTC,QAAS,CAAC,YAAD,0BACTC,OAAO,SAEX,CACIH,GAAI,EACJC,SAAS,gCACTC,QAAS,CAAC,YAAD,6BACTC,OAAO,aAEX,CACIH,GAAI,EACJC,SAAS,oCACTC,QAAS,CAAC,YAAD,4BACTC,OAAO,UAEX,CACIH,GAAI,EACJC,SAAS,iCACTC,QAAS,CAAC,SAAD,iCACTC,OAAO,UAEX,CACIH,GAAI,EACJC,SAAS,gCACTC,QAAS,CAAC,QAAD,8BACTC,OAAO,a,eC6GAC,EAtIf,kDAEI,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAYVC,SAAW,WACP,IAAOC,EAAgB,EAAKC,MAArBD,aACP,EAAKE,UAAS,WACV,MAAO,CACHR,SAAUF,EAASQ,GAAcN,SACjCC,QAASH,EAASQ,GAAcL,QAChCC,OAAQJ,EAASQ,GAAcJ,YAnBxB,EA0BnBO,oBAAsB,WAClB,MAAoC,EAAKF,MAAlCG,EAAP,EAAOA,WAAYR,EAAnB,EAAmBA,OAAQS,EAA3B,EAA2BA,MAExBD,IAAeR,GACd,EAAKM,SAAU,CACXG,MAAOA,EAAQ,IAIvB,EAAKH,SAAS,CACVF,aAAc,EAAKC,MAAMD,aAAa,EACtCI,WAAY,QArCD,EA+CnBE,YAAc,SAAAV,GACV,EAAKM,SAAS,CACVE,WAAYR,EACZW,UAAU,KAlDC,EAqEvBC,cAAe,WACR,EAAKP,MAAMD,eAAiBR,EAASiB,OAAQ,GAC5C,EAAKP,SAAS,CACVQ,SAAQ,KArEZ,EAAKT,MAAQ,CACRG,WAAY,KACZJ,aAAc,EACdL,QAAS,GACTe,SAAS,EACTL,MAAO,EACPE,UAAU,GATA,EAFvB,qDA6CI,WACII,KAAKZ,aA9Cb,gCAwDI,SAAmBa,EAAWC,GAC1B,IAAMb,EAAgBW,KAAKV,MAArBD,aACHW,KAAKV,MAAMD,cAAgBa,EAAUb,cACpCW,KAAKT,UAAS,WACV,MAAO,CACHR,SAAUF,EAASQ,GAAcN,SACjCC,QAASH,EAASQ,GAAcL,QAChCC,OAAQJ,EAASQ,GAAcJ,aA/DnD,oBAgFI,WAAU,IAAD,OACL,EAA8De,KAAKV,MAA7DP,EAAN,EAAMA,SAAUC,EAAhB,EAAgBA,QAASK,EAAzB,EAAyBA,aAAcI,EAAvC,EAAuCA,WAEvC,OAFA,EAAmDM,QAI3C,gCACI,4DAA+BC,KAAKV,MAAMI,MAA1C,aACA,oEACA,6BACKb,EAASsB,KAAI,SAACC,EAAMC,GAAP,OACd,oBAAIC,UAAU,UAAd,SAESF,EAAKnB,QADLoB,WAYrB,gCACI,6BAAKtB,IACL,kDAAmBM,EAAe,EAAlC,eAA0CR,EAASiB,UAE/Cd,EAAQmB,KAAI,SAAAI,GAAM,OAClB,mBAAqBD,UAAS,kBAAab,IAAec,EAAQ,WAAa,MAC/EC,QAAW,kBAAM,EAAKb,YAAYY,IADlC,SAGKA,GAHKA,EAAOzB,OASpBO,EAAeR,EAASiB,OAAS,GAElC,wBAAQF,SAAYI,KAAKV,MAAMM,SAAUY,QAASR,KAAKR,oBAAvD,2BAGCH,IAAiBR,EAASiB,OAAO,GAClC,wBAAQU,QAASR,KAAKH,cACtBD,SAAYI,KAAKV,MAAMM,SADvB,2BA3HhB,GAA0Ba,aCA1B,SAASC,IACL,OACI,8BACI,cAAC,EAAD,MAOGA,gBAETC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAACL,EAAD,IAAaC,K","file":"static/js/main.cc52ff99.chunk.js","sourcesContent":["export const QuizData = [\r\n    {\r\n        id: 0,\r\n        question: `What is the capital of Nigeria?`,\r\n        options: [`New Delhi`, `Abuja`, `Owerri`, `Enugu`],\r\n        answer: `Abuja`\r\n    },\r\n    {\r\n        id: 0,\r\n        question: `What is the capital of India?`,\r\n        options: [`New Delhi`, `Abuja`, `Mumbai`, `Ashgabat`],\r\n        answer: `New Delhi`\r\n    },\r\n    {\r\n        id: 0,\r\n        question: `What is the capital of Australia?`,\r\n        options: [`Melbourne`, `Akokwa`, `Owerri`, `Sydney`],\r\n        answer: `Sydney`\r\n    },\r\n    {\r\n        id: 0,\r\n        question: `What is the capital of Turkey?`,\r\n        options: [`Rijadh`, `Ankara`, `Istanbul`, `Abakaliki`],\r\n        answer: `Ankara`\r\n    },\r\n    {\r\n        id: 0,\r\n        question: `What is the capital of Syria?`,\r\n        options: [`Syria`, `Damascus`, `Anambra`, `Enugu`],\r\n        answer: `Damascus`\r\n    },\r\n]","import React, { Component } from 'react'\r\nimport {QuizData} from './QuizData'\r\nimport './styles.css'\r\n\r\nexport class Quiz extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             userAnswer: null,\r\n             currentIndex: 0,\r\n             options: [],\r\n             quizEnd: false, \r\n             score: 0,\r\n             disabled: true\r\n        }\r\n    }\r\n    \r\n    loadQuiz = () => {\r\n        const {currentIndex} = this.state; \r\n        this.setState(() => {\r\n            return {\r\n                question: QuizData[currentIndex].question,\r\n                options: QuizData[currentIndex].options,\r\n                answer: QuizData[currentIndex].answer\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    nextQuestionHandler = () => {\r\n        const {userAnswer, answer, score} = this.state\r\n\r\n        if(userAnswer === answer){\r\n            this.setState ({\r\n                score: score + 1\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            currentIndex: this.state.currentIndex+1,\r\n            userAnswer: null\r\n        })\r\n    }\r\n\r\n\r\n  \r\n    componentDidMount(){\r\n        this.loadQuiz();\r\n    }\r\n\r\n    checkAnswer = answer => {\r\n        this.setState({\r\n            userAnswer: answer,\r\n            disabled: false\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        const{currentIndex} = this.state;\r\n        if(this.state.currentIndex != prevState.currentIndex) {\r\n            this.setState(() => {\r\n                return {\r\n                    question: QuizData[currentIndex].question,\r\n                    options: QuizData[currentIndex].options,\r\n                    answer: QuizData[currentIndex].answer\r\n    \r\n                }\r\n            }); \r\n        }\r\n    }\r\n\r\n    //Responds to the click of the finish button\r\nfinishHandler =() => {\r\n    if(this.state.currentIndex === QuizData.length -1){\r\n        this.setState({\r\n            quizEnd:true\r\n        })\r\n    }\r\n\r\n}\r\n\r\n    render() {\r\n        const{question, options, currentIndex, userAnswer, quizEnd} = this.state\r\n\r\n        if(quizEnd){\r\n            return (\r\n                <div>\r\n                    <h1>Game Over. Final score is {this.state.score} points</h1>\r\n                    <p>The correct Answer for the quiz are</p>\r\n                    <ul>\r\n                        {QuizData.map((item, index)=>(\r\n                        <li className='options'\r\n                            key={index}>\r\n                                {item.answer}\r\n                        </li>    \r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h2>{question}</h2>\r\n                <span>{`Question ${currentIndex + 1} of ${QuizData.length}`}</span>\r\n                {\r\n                    options.map(option => \r\n                    <p key = {option.id} className={`options ${userAnswer === option? \"selected\" : null}`}\r\n                    onClick = {() => this.checkAnswer(option)}\r\n                    >\r\n                        {option}\r\n\r\n                    </p>\r\n                        )\r\n                }\r\n\r\n                {currentIndex < QuizData.length - 1 && \r\n                \r\n                <button disabled = {this.state.disabled} onClick={this.nextQuestionHandler}>\r\n                    Next Question\r\n                </button>}    \r\n                {currentIndex === QuizData.length-1 && \r\n                <button onClick={this.finishHandler} \r\n                disabled = {this.state.disabled}>\r\n                    Finish\r\n                </button>}\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Quiz\r\n\r\n","import ReactDOM  from 'react-dom'\r\nimport React from 'react'\r\nimport Quiz from './Quiz'\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <Quiz></Quiz>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App\r\n\r\nconst rootElement = document.getElementById('root')\r\nReactDOM.render(<App></App>, rootElement)"],"sourceRoot":""}